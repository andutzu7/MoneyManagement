<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        WrZdY6q6aIv/2Q==
</value>
  </data>
</root>